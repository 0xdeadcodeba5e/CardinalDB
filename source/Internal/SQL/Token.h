/*
**  CardinalDB
**  BSD 3-Clause License
**  
**  Copyright (c) 2022, Santhosh K
**  All rights reserved.
**  
**  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following
**  conditions are met:
**  
**  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following
**     disclaimer.
**  
**  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
**     disclaimer in the documentation and/or other materials provided with the distribution.
**  
**  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote
**     products derived from this software without specific prior written permission.
**  
**  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
**  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
**  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
**  USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
**  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
**  OF THE POSSIBILITY OF SUCH DAMAGE.
*/
#ifndef CARDINALDB__INTERNAL_SQL__TOKEN_H_
#define CARDINALDB__INTERNAL_SQL__TOKEN_H_

#include <CardinalDB/Configuration.h>
#include <CardinalDB/TypeDeclaration.h>

typedef enum __cardinaldb_sql_token_type {
    SQL_TOKEN_TYPE__INVALID,

    SQL_TOKEN_TYPE__LITERAL,
    SQL_TOKEN_TYPE__NUMERIC,
    SQL_TOKEN_TYPE__STRING,

        SQL_TOKEN_TYPE__KEYWORD_ISNULL,
    SQL_TOKEN_TYPE__KEYWORD_NULL,
    SQL_TOKEN_TYPE__KEYWORD_NULLS,
    SQL_TOKEN_TYPE__KEYWORD_SAVEPOINT,
    SQL_TOKEN_TYPE__KEYWORD_INTERSECT,
    SQL_TOKEN_TYPE__KEYWORD_TRUNCATE,
    SQL_TOKEN_TYPE__KEYWORD_TABLE,
    SQL_TOKEN_TYPE__KEYWORD_LEFT,
    SQL_TOKEN_TYPE__KEYWORD_THEN,
    SQL_TOKEN_TYPE__KEYWORD_END,
    SQL_TOKEN_TYPE__KEYWORD_DELETE,
    SQL_TOKEN_TYPE__KEYWORD_TEMP,
    SQL_TOKEN_TYPE__KEYWORD_TEMPORARY,
    SQL_TOKEN_TYPE__KEYWORD_NOTNULL,
    SQL_TOKEN_TYPE__KEYWORD_LAST,
    SQL_TOKEN_TYPE__KEYWORD_STRING,
    SQL_TOKEN_TYPE__KEYWORD_GENERATED,
    SQL_TOKEN_TYPE__KEYWORD_DATABASE,
    SQL_TOKEN_TYPE__KEYWORD_SELECT,
    SQL_TOKEN_TYPE__KEYWORD_TIES,
    SQL_TOKEN_TYPE__KEYWORD_ESCAPE,
    SQL_TOKEN_TYPE__KEYWORD_EXCLUDE,
    SQL_TOKEN_TYPE__KEYWORD_DEFAULT,
    SQL_TOKEN_TYPE__KEYWORD_TRIGGER,
    SQL_TOKEN_TYPE__KEYWORD_RANGE,
    SQL_TOKEN_TYPE__KEYWORD_EXPLAIN,
    SQL_TOKEN_TYPE__KEYWORD_INDEX,
    SQL_TOKEN_TYPE__KEYWORD_INDEXED,
    SQL_TOKEN_TYPE__KEYWORD_DEFERRABLE,
    SQL_TOKEN_TYPE__KEYWORD_EACH,
    SQL_TOKEN_TYPE__KEYWORD_CHECK,
    SQL_TOKEN_TYPE__KEYWORD_KEY,
    SQL_TOKEN_TYPE__KEYWORD_BEFORE,
    SQL_TOKEN_TYPE__KEYWORD_FOR,
    SQL_TOKEN_TYPE__KEYWORD_FOREIGN,
    SQL_TOKEN_TYPE__KEYWORD_IGNORE,
    SQL_TOKEN_TYPE__KEYWORD_NO,
    SQL_TOKEN_TYPE__KEYWORD_REFERENCES,
    SQL_TOKEN_TYPE__KEYWORD_BEGIN,
    SQL_TOKEN_TYPE__KEYWORD_INNER,
    SQL_TOKEN_TYPE__KEYWORD_REINDEX,
    SQL_TOKEN_TYPE__KEYWORD_EXCEPT,
    SQL_TOKEN_TYPE__KEYWORD_TRANSACTION,
    SQL_TOKEN_TYPE__KEYWORD_ACTION,
    SQL_TOKEN_TYPE__KEYWORD_NATURAL,
    SQL_TOKEN_TYPE__KEYWORD_ALTER,
    SQL_TOKEN_TYPE__KEYWORD_RAISE,
    SQL_TOKEN_TYPE__KEYWORD_IS,
    SQL_TOKEN_TYPE__KEYWORD_ELSE,
    SQL_TOKEN_TYPE__KEYWORD_EXISTS,
    SQL_TOKEN_TYPE__KEYWORD_CASCADE,
    SQL_TOKEN_TYPE__KEYWORD_ASC,
    SQL_TOKEN_TYPE__KEYWORD_DEFERRED,
    SQL_TOKEN_TYPE__KEYWORD_DESC,
    SQL_TOKEN_TYPE__KEYWORD_COLLATE,
    SQL_TOKEN_TYPE__KEYWORD_EXCLUSIVE,
    SQL_TOKEN_TYPE__KEYWORD_CREATE,
    SQL_TOKEN_TYPE__KEYWORD_IMMEDIATE,
    SQL_TOKEN_TYPE__KEYWORD_JOIN,
    SQL_TOKEN_TYPE__KEYWORD_INSERT,
    SQL_TOKEN_TYPE__KEYWORD_UPDATE,
    SQL_TOKEN_TYPE__KEYWORD_DATE,
    SQL_TOKEN_TYPE__KEYWORD_VIRTUAL,
    SQL_TOKEN_TYPE__KEYWORD_ALWAYS,
    SQL_TOKEN_TYPE__KEYWORD_WHERE,
    SQL_TOKEN_TYPE__KEYWORD_RECURSIVE,
    SQL_TOKEN_TYPE__KEYWORD_ABORT,
    SQL_TOKEN_TYPE__KEYWORD_OR,
    SQL_TOKEN_TYPE__KEYWORD_ADD,
    SQL_TOKEN_TYPE__KEYWORD_DETACH,
    SQL_TOKEN_TYPE__KEYWORD_HAVING,
    SQL_TOKEN_TYPE__KEYWORD_GLOB,
    SQL_TOKEN_TYPE__KEYWORD_BETWEEN,
    SQL_TOKEN_TYPE__KEYWORD_NOT,
    SQL_TOKEN_TYPE__KEYWORD_NOTHING,
    SQL_TOKEN_TYPE__KEYWORD_GROUP,
    SQL_TOKEN_TYPE__KEYWORD_GROUPS,
    SQL_TOKEN_TYPE__KEYWORD_AFTER,
    SQL_TOKEN_TYPE__KEYWORD_REGEXP,
    SQL_TOKEN_TYPE__KEYWORD_PLAN,
    SQL_TOKEN_TYPE__KEYWORD_ANALYZE,
    SQL_TOKEN_TYPE__KEYWORD_AND,
    SQL_TOKEN_TYPE__KEYWORD_DISTINCT,
    SQL_TOKEN_TYPE__KEYWORD_ATTACH,
    SQL_TOKEN_TYPE__KEYWORD_AUTOINCREMENT,
    SQL_TOKEN_TYPE__KEYWORD_CASE,
    SQL_TOKEN_TYPE__KEYWORD_AS,
    SQL_TOKEN_TYPE__KEYWORD_CAST,
    SQL_TOKEN_TYPE__KEYWORD_COLUMN,
    SQL_TOKEN_TYPE__KEYWORD_NUMBER,
    SQL_TOKEN_TYPE__KEYWORD_RELEASE,
    SQL_TOKEN_TYPE__KEYWORD_COMMIT,
    SQL_TOKEN_TYPE__KEYWORD_CONFLICT,
    SQL_TOKEN_TYPE__KEYWORD_CONSTRAINT,
    SQL_TOKEN_TYPE__KEYWORD_IN,
    SQL_TOKEN_TYPE__KEYWORD_INTO,
    SQL_TOKEN_TYPE__KEYWORD_TO,
    SQL_TOKEN_TYPE__KEYWORD_OF,
    SQL_TOKEN_TYPE__KEYWORD_OFFSET,
    SQL_TOKEN_TYPE__KEYWORD_SET,
    SQL_TOKEN_TYPE__KEYWORD_CROSS,
    SQL_TOKEN_TYPE__KEYWORD_CURRENT,
    SQL_TOKEN_TYPE__KEYWORD_CURRENT_TIME,
    SQL_TOKEN_TYPE__KEYWORD_CURRENT_TIMESTAMP,
    SQL_TOKEN_TYPE__KEYWORD_TIME,
    SQL_TOKEN_TYPE__KEYWORD_TIMESTAMP,
    SQL_TOKEN_TYPE__KEYWORD_PRAGMA,
    SQL_TOKEN_TYPE__KEYWORD_MATCH,
    SQL_TOKEN_TYPE__KEYWORD_DROP,
    SQL_TOKEN_TYPE__KEYWORD_PARTITION,
    SQL_TOKEN_TYPE__KEYWORD_FAIL,
    SQL_TOKEN_TYPE__KEYWORD_LIKE,
    SQL_TOKEN_TYPE__KEYWORD_FILTER,
    SQL_TOKEN_TYPE__KEYWORD_RENAME,
    SQL_TOKEN_TYPE__KEYWORD_FIRST,
    SQL_TOKEN_TYPE__KEYWORD_FOLLOWING,
    SQL_TOKEN_TYPE__KEYWORD_FROM,
    SQL_TOKEN_TYPE__KEYWORD_MATERIALIZED,
    SQL_TOKEN_TYPE__KEYWORD_FULL,
    SQL_TOKEN_TYPE__KEYWORD_LIMIT,
    SQL_TOKEN_TYPE__KEYWORD_MODIFY,
    SQL_TOKEN_TYPE__KEYWORD_IF,
    SQL_TOKEN_TYPE__KEYWORD_INSTEAD,
    SQL_TOKEN_TYPE__KEYWORD_ORDER,
    SQL_TOKEN_TYPE__KEYWORD_REPLACE,
    SQL_TOKEN_TYPE__KEYWORD_OTHERS,
    SQL_TOKEN_TYPE__KEYWORD_OUTER,
    SQL_TOKEN_TYPE__KEYWORD_RESTRICT,
    SQL_TOKEN_TYPE__KEYWORD_OVER,
    SQL_TOKEN_TYPE__KEYWORD_RIGHT,
    SQL_TOKEN_TYPE__KEYWORD_ROLLBACK,
    SQL_TOKEN_TYPE__KEYWORD_ROW,
    SQL_TOKEN_TYPE__KEYWORD_ROWS,
    SQL_TOKEN_TYPE__KEYWORD_UNBOUNDED,
    SQL_TOKEN_TYPE__KEYWORD_UNION,
    SQL_TOKEN_TYPE__KEYWORD_ON,
    SQL_TOKEN_TYPE__KEYWORD_UNIQUE,
    SQL_TOKEN_TYPE__KEYWORD_QUERY,
    SQL_TOKEN_TYPE__KEYWORD_USING,
    SQL_TOKEN_TYPE__KEYWORD_VACUUM,
    SQL_TOKEN_TYPE__KEYWORD_VALUES,
    SQL_TOKEN_TYPE__KEYWORD_VIEW,
    SQL_TOKEN_TYPE__KEYWORD_WHEN,
    SQL_TOKEN_TYPE__KEYWORD_WINDOW,
    SQL_TOKEN_TYPE__KEYWORD_DO,
    SQL_TOKEN_TYPE__KEYWORD_WITH,
    SQL_TOKEN_TYPE__KEYWORD_WITHOUT,
    SQL_TOKEN_TYPE__KEYWORD_BY,
    SQL_TOKEN_TYPE__KEYWORD_INITIALLY,
    SQL_TOKEN_TYPE__KEYWORD_ALL,
    SQL_TOKEN_TYPE__KEYWORD_PRECEDING,
    SQL_TOKEN_TYPE__KEYWORD_PRIMARY,
    SQL_TOKEN_TYPE__KEYWORD_RETURNING,


    SQL_TOKEN_TYPE__EQUAL,
    SQL_TOKEN_TYPE__LESS_THAN,
    SQL_TOKEN_TYPE__GREATER_THAN,
    SQL_TOKEN_TYPE__LESS_THAN_EQUAL,
    SQL_TOKEN_TYPE__GREATER_THAN_EQUAL,
    SQL_TOKEN_TYPE__BANG,
    SQL_TOKEN_TYPE__NOT_EQUAL,
    SQL_TOKEN_TYPE__NOT_EQUAL_NULL_SAFE,
    SQL_TOKEN_TYPE__SEMICOLON,
    SQL_TOKEN_TYPE__COMMA,
    SQL_TOKEN_TYPE__PERIOD,
    SQL_TOKEN_TYPE__TILDE,
    SQL_TOKEN_TYPE__LEFT_PARENTHESIS,
    SQL_TOKEN_TYPE__RIGHT_PARENTHESIS,
    SQL_TOKEN_TYPE__PLUS,
    SQL_TOKEN_TYPE__MINUS,
    SQL_TOKEN_TYPE__ASTERISK,
    SQL_TOKEN_TYPE__SLASH,
    SQL_TOKEN_TYPE__MODULO,
    SQL_TOKEN_TYPE__AMPERSAND,
    SQL_TOKEN_TYPE__PIPE,

    SQL_TOKEN_TYPE__EOF
} SQLTokenType;

typedef struct __cardinaldb_sql_token {
    SQLTokenType    Type;
    const char*     Begin;
    const char*     End;
    size_t          Line;
    size_t          Column;
} SQLToken;

static const SQLToken INVALID_TOKEN = {
    .Type       =   SQL_TOKEN_TYPE__INVALID,
    .Begin      =   NULL,
    .End        =   NULL,
    .Line       =   SIZE_MAX,
    .Column     =   SIZE_MAX
};

#endif